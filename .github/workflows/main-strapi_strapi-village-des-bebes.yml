# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - strapi-village-des-bebes

on:
  push:
    branches:
      - main-strapi
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Output the current working directory
        run: echo "Current working directory is $PWD"
        working-directory: ./cms

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: npm install and build
        run: |
          npm install
          npm run build --if-present
        working-directory: ./cms

      - name: Make envfile
        run: |
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> .env
          echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> .env
          echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" >> .env
          echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> .env
          echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_SSL=${{ secrets.DATABASE_SSL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
          echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" >> .env
          echo "CLOUDINARY_FOLDER=${{ secrets.CLOUDINARY_FOLDER }}" >> .env
        working-directory: ./cms

      - name: Output check the envfile
        run: cat .env
        working-directory: ./cms

      - name: Zip the app
        run: |
          pwd
          zip -r node-app.zip .
          ls
        working-directory: ./cms

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: ./cms/node-app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip and cleanup
        run: |
          pwd
          ls
          unzip node-app.zip
          rm node-app.zip
          ls

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "strapi-village-des-bebes"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E0BA97A34EAE499091B54C551A5FD41C }}
          package: .
          startup-command: "rm -rf node_modules && npm install && npm run build && npm run start"
